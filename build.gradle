plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
    id 'org.jetbrains.dokka' version '0.9.17'
}

apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    jcenter()
}

version = '0.1.kotlin12'
group = 'com.oripwk'
archivesBaseName = 'micrometer-kotlin'

dependencies {
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.1.0'
    implementation group: 'io.micrometer', name: 'micrometer-core', version: '1.1.2'

    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-test'
    testImplementation group: 'org.spekframework.spek2', name: 'spek-dsl-jvm', version: '2.0.0-rc.1' exclude group: 'org.jetbrains.kotlin'

    testRuntimeOnly group: 'org.spekframework.spek2', name: 'spek-runner-junit5', version: '2.0.0-rc.1'
    testRuntimeOnly group: 'org.jetbrains.kotlin', name: 'kotlin-reflect'
}

test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from "$buildDir/javadoc"
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'micrometer-kotlin'
                packaging 'jar'
                description 'Kotlin support for micrometer.io'
                url 'https://github.com/oripwk/micrometer-kotlin'

                scm {
                    connection 'scm:git:git://github.com/oripwk/micrometer-kotlin.git'
                    developerConnection 'scm:git:git@github.com:oripwk/micrometer-kotlin.git'
                    url 'https://github.com/oripwk/micrometer-kotlin'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'oripwk'
                        name 'Ori Popowski'
                        email 'ori.psk@gmail.com'
                    }
                }
            }
        }
    }
}